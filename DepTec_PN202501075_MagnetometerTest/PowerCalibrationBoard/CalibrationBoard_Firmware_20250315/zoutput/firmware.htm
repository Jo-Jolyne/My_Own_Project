<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\zoutput\firmware.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\zoutput\firmware.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Sat Mar 15 15:17:25 2025
<BR><P>
<H3>Maximum Stack Usage =        392 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; vApp_ModbusTCP_Process &rArr; Socket_Data_Process &rArr; ModbusTCP_04_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f3xx_it.o(.text.BusFault_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[1f]">CAN_RX1_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[20]">CAN_SCE_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[3e]">COMP1_2_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[3f]">COMP4_6_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[39]">DMA2_Channel1_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[3a]">DMA2_Channel2_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel3_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel4_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel5_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f3xx_it.o(.text.DebugMon_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[12]">EXTI2_TSC_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[43]">FPU_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f3xx_it.o(.text.HardFault_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f3xx_it.o(.text.MemManage_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f3xx_it.o(.text.NMI_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f3xx_it.o(.text.PendSV_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[35]">SPI3_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f3xx_it.o(.text.SVC_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f3xx_it.o(.text.SysTick_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[45]">SystemInit</a> from system_stm32f3xx.o(.text.SystemInit) referenced from startup_stm32f302xc.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[38]">TIM6_DAC_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[36]">UART4_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[37]">UART5_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[42]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN_TX_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[40]">USB_HP_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN_RX0_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[41]">USB_LP_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f3xx_it.o(.text.UsageFault_Handler) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f302xc.o(.text) referenced from startup_stm32f302xc.o(RESET)
 <LI><a href="#[46]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f302xc.o(.text)
 <LI><a href="#[44]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[46]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[47]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[bd]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[be]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[bf]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>COMP1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>COMP4_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f302xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_04_Process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_03_Process
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucLoad_DevPara
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c4]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c7]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[c8]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>Addr_Reset_Check</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, board.o(.text.Addr_Reset_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Addr_Reset_Check &rArr; HAL_GPIO_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Tick_SysCall
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>Detect_Gateway</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, w5500.o(.text.Detect_Gateway))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = Detect_Gateway &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_4Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Initialization
</UL>

<P><STRONG><a name="[57]"></a>EEPROM_Read</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, m24c32.o(.text.EEPROM_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = EEPROM_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucLoad_DevPara
</UL>

<P><STRONG><a name="[59]"></a>EEPROM_Write</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, m24c32.o(.text.EEPROM_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = EEPROM_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucWrite_BootParagram
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDev_Para_Reset
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucLoad_DevPara
</UL>

<P><STRONG><a name="[83]"></a>Error_Handler</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, main.o(.text.Error_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[55]"></a>HAL_Delay</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, stm32f3xx_hal.o(.text.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Hardware_Reset
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucLoad_DevPara
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_Gateway
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init
</UL>

<P><STRONG><a name="[64]"></a>HAL_GPIO_Init</STRONG> (Thumb, 844 bytes, Stack size 40 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[51]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_ReadPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Addr_Reset_Check
</UL>

<P><STRONG><a name="[7c]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_TogglePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Tick_SysCall
</UL>

<P><STRONG><a name="[81]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f3xx_hal_gpio.o(.text.HAL_GPIO_WritePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucBoard_OUTPUT_Ctrl
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Hardware_Reset
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBoard_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_2Byte
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_1Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_4Byte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_2Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_nByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_2Byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_1Byte
</UL>

<P><STRONG><a name="[5b]"></a>HAL_GetTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f3xx_hal.o(.text.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[84]"></a>HAL_I2CEx_ConfigAnalogFilter</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, stm32f3xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigAnalogFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_I2CEx_ConfigAnalogFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[85]"></a>HAL_I2CEx_ConfigDigitalFilter</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, stm32f3xx_hal_i2c_ex.o(.text.HAL_I2CEx_ConfigDigitalFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_I2CEx_ConfigDigitalFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[5c]"></a>HAL_I2C_Init</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[58]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 650 bytes, Stack size 40 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
</UL>

<P><STRONG><a name="[5a]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 628 bytes, Stack size 40 bytes, stm32f3xx_hal_i2c.o(.text.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
</UL>

<P><STRONG><a name="[5d]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, i2c.o(.text.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[a6]"></a>HAL_IncTick</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f3xx_hal.o(.text.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[65]"></a>HAL_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f3xx_hal.o(.text.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>HAL_InitTick</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f3xx_hal.o(.text.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[68]"></a>HAL_MspInit</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f3xx_hal_msp.o(.text.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[6a]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, stm32f3xx_hal_cortex.o(.text.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EncodePriority
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[66]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32f3xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_NVIC_SetPriorityGrouping &rArr; __NVIC_SetPriorityGrouping
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[6f]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(.text.HAL_NVIC_SystemReset))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
</UL>

<P><STRONG><a name="[71]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 858 bytes, Stack size 48 bytes, stm32f3xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[72]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 778 bytes, Stack size 64 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_EncodePriority
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[73]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[74]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 2670 bytes, Stack size 192 bytes, stm32f3xx_hal_rcc.o(.text.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[75]"></a>HAL_SPI_Init</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, stm32f3xx_hal_spi.o(.text.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
</UL>

<P><STRONG><a name="[76]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, spi.o(.text.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[77]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 748 bytes, Stack size 40 bytes, stm32f3xx_hal_spi.o(.text.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_4Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_nByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>

<P><STRONG><a name="[79]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 1102 bytes, Stack size 64 bytes, stm32f3xx_hal_spi.o(.text.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_2Byte
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Byte
</UL>

<P><STRONG><a name="[69]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, stm32f3xx_hal_cortex.o(.text.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SYSTICK_Config &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[7b]"></a>HAL_Tick_SysCall</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_timer.o(.text.HAL_Tick_SysCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Tick_SysCall &rArr; Addr_Reset_Check &rArr; HAL_GPIO_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Addr_Reset_Check
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vNet_LinkLose_Count
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[ba]"></a>Load_Net_Parameters</STRONG> (Thumb, 352 bytes, Stack size 8 bytes, app_net.o(.text.Load_Net_Parameters))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Load_Net_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_DevPara_ResetCheck
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_Net_Init
</UL>

<P><STRONG><a name="[80]"></a>MX_GPIO_Init</STRONG> (Thumb, 300 bytes, Stack size 80 bytes, gpio.o(.text.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>MX_I2C1_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, i2c.o(.text.MX_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_I2C1_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigDigitalFilter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2CEx_ConfigAnalogFilter
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>MX_SPI2_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, spi.o(.text.MX_SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_SPI2_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>ModbusTCP_01_Process</STRONG> (Thumb, 524 bytes, Stack size 48 bytes, app_net.o(.text.ModbusTCP_01_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ModbusTCP_01_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[8b]"></a>ModbusTCP_02_Process</STRONG> (Thumb, 524 bytes, Stack size 48 bytes, app_net.o(.text.ModbusTCP_02_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ModbusTCP_02_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[8c]"></a>ModbusTCP_03_Process</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, app_net.o(.text.ModbusTCP_03_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ModbusTCP_03_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[8e]"></a>ModbusTCP_04_Process</STRONG> (Thumb, 378 bytes, Stack size 48 bytes, app_net.o(.text.ModbusTCP_04_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = ModbusTCP_04_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Input_RegData_Process
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[90]"></a>ModbusTCP_05_Process</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, app_net.o(.text.ModbusTCP_05_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ModbusTCP_05_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Coil_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[92]"></a>ModbusTCP_06_Process</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, app_net.o(.text.ModbusTCP_06_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = ModbusTCP_06_Process &rArr; Modbus_Hold_RegData_Process &rArr; ucWrite_BootParagram &rArr; EEPROM_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucWrite_BootParagram
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Hold_RegData_Process
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[95]"></a>ModbusTCP_0F_Process</STRONG> (Thumb, 426 bytes, Stack size 40 bytes, app_net.o(.text.ModbusTCP_0F_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = ModbusTCP_0F_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Coil_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[96]"></a>ModbusTCP_10_Process</STRONG> (Thumb, 568 bytes, Stack size 40 bytes, app_net.o(.text.ModbusTCP_10_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = ModbusTCP_10_Process &rArr; Modbus_Hold_RegData_Process &rArr; ucWrite_BootParagram &rArr; EEPROM_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Check_Reg_Data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucWrite_BootParagram
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Hold_RegData_Process
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[8a]"></a>ModbusTCP_ACK_Error</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, app_net.o(.text.ModbusTCP_ACK_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_0F_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_05_Process
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_04_Process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_03_Process
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_02_Process
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_01_Process
</UL>

<P><STRONG><a name="[88]"></a>Modbus_Check_Reg_Data</STRONG> (Thumb, 354 bytes, Stack size 12 bytes, app_modbus.o(.text.Modbus_Check_Reg_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Modbus_Check_Reg_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_0F_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_05_Process
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_04_Process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_03_Process
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_02_Process
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_01_Process
</UL>

<P><STRONG><a name="[91]"></a>Modbus_Coil_Set</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, app_modbus.o(.text.Modbus_Coil_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Modbus_Coil_Set &rArr; ucBoard_OUTPUT_Ctrl &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucBoard_OUTPUT_Ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_0F_Process
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_05_Process
</UL>

<P><STRONG><a name="[93]"></a>Modbus_Hold_RegData_Process</STRONG> (Thumb, 642 bytes, Stack size 48 bytes, app_modbus.o(.text.Modbus_Hold_RegData_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = Modbus_Hold_RegData_Process &rArr; ucWrite_BootParagram &rArr; EEPROM_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucBoard_OUTPUT_Ctrl
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucWrite_BootParagram
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
</UL>

<P><STRONG><a name="[8f]"></a>Modbus_Input_RegData_Process</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, app_modbus.o(.text.Modbus_Input_RegData_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Modbus_Input_RegData_Process
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_04_Process
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>Read_SOCK_Data_Buffer</STRONG> (Thumb, 472 bytes, Stack size 48 bytes, w5500.o(.text.Read_SOCK_Data_Buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Read_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_2Byte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_2Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Byte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
</UL>

<P><STRONG><a name="[9e]"></a>Read_W5500_1Byte</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, w5500.o(.text.Read_W5500_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Read_W5500_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Byte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Interrupt_Process
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Link_Detect
</UL>

<P><STRONG><a name="[56]"></a>Read_W5500_SOCK_1Byte</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, w5500.o(.text.Read_W5500_SOCK_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read_Byte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Interrupt_Process
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_UDP
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Listen
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Connect
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_Gateway
</UL>

<P><STRONG><a name="[99]"></a>Read_W5500_SOCK_2Byte</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, w5500.o(.text.Read_W5500_SOCK_2Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
</UL>

<P><STRONG><a name="[9c]"></a>SPI_Read_Byte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, w5500.o(.text.SPI_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_1Byte
</UL>

<P><STRONG><a name="[9b]"></a>SPI_Send_Byte</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, w5500.o(.text.SPI_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SPI_Send_Byte &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_2Byte
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_1Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_4Byte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_2Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_nByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_2Byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_1Byte
</UL>

<P><STRONG><a name="[9a]"></a>SPI_Send_Short</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, w5500.o(.text.SPI_Send_Short))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_2Byte
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_1Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_4Byte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_2Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_nByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_2Byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_1Byte
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[a1]"></a>Socket_Connect</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, w5500.o(.text.Socket_Connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Socket_Connect &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_4Byte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_2Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Socket_Set
</UL>

<P><STRONG><a name="[a2]"></a>Socket_Data_Process</STRONG> (Thumb, 798 bytes, Stack size 48 bytes, app_net.o(.text.Socket_Data_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Socket_Data_Process &rArr; ModbusTCP_04_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_0F_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_05_Process
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_04_Process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_03_Process
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_02_Process
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_01_Process
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_ModbusTCP_Process
</UL>

<P><STRONG><a name="[a3]"></a>Socket_Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, w5500.o(.text.Socket_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Socket_Init &rArr; Write_W5500_SOCK_2Byte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_2Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Interrupt_Process
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Initialization
</UL>

<P><STRONG><a name="[a4]"></a>Socket_Listen</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, w5500.o(.text.Socket_Listen))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Socket_Listen &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Socket_Set
</UL>

<P><STRONG><a name="[a5]"></a>Socket_UDP</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, w5500.o(.text.Socket_UDP))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Socket_UDP &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Socket_Set
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f3xx_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; HAL_Tick_SysCall &rArr; Addr_Reset_Check &rArr; HAL_GPIO_ReadPin
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Tick_SysCall
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[a7]"></a>SystemClock_Config</STRONG> (Thumb, 150 bytes, Stack size 128 bytes, main.o(.text.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>SystemInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_stm32f3xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f3xx_it.o(.text.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f302xc.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>W5500_Hardware_Reset</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, w5500.o(.text.W5500_Hardware_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = W5500_Hardware_Reset &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_DevPara_ResetCheck
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_Net_Init
</UL>

<P><STRONG><a name="[aa]"></a>W5500_Init</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, w5500.o(.text.W5500_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = W5500_Init &rArr; Write_W5500_nByte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_nByte
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_2Byte
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Initialization
</UL>

<P><STRONG><a name="[ae]"></a>W5500_Initialization</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, w5500.o(.text.W5500_Initialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = W5500_Initialization &rArr; Detect_Gateway &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_Gateway
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_ModbusTCP_Process
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_DevPara_ResetCheck
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_Net_Init
</UL>

<P><STRONG><a name="[af]"></a>W5500_Interrupt_Process</STRONG> (Thumb, 308 bytes, Stack size 16 bytes, w5500.o(.text.W5500_Interrupt_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = W5500_Interrupt_Process &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_1Byte
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_1Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_ModbusTCP_Process
</UL>

<P><STRONG><a name="[b0]"></a>W5500_Link_Detect</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, w5500.o(.text.W5500_Link_Detect))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = W5500_Link_Detect &rArr; Read_W5500_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_ModbusTCP_Process
</UL>

<P><STRONG><a name="[b1]"></a>W5500_Socket_Set</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, w5500.o(.text.W5500_Socket_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = W5500_Socket_Set &rArr; Socket_Connect &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_UDP
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Listen
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Connect
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_ModbusTCP_Process
</UL>

<P><STRONG><a name="[89]"></a>Write_SOCK_Data_Buffer</STRONG> (Thumb, 314 bytes, Stack size 48 bytes, w5500.o(.text.Write_SOCK_Data_Buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_W5500_SOCK_2Byte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_2Byte
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_W5500_SOCK_1Byte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_0F_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_05_Process
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_04_Process
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_03_Process
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_02_Process
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_01_Process
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_ACK_Error
</UL>

<P><STRONG><a name="[ab]"></a>Write_W5500_1Byte</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, w5500.o(.text.Write_W5500_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Write_W5500_1Byte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init
</UL>

<P><STRONG><a name="[ad]"></a>Write_W5500_2Byte</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, w5500.o(.text.Write_W5500_2Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Write_W5500_2Byte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init
</UL>

<P><STRONG><a name="[54]"></a>Write_W5500_SOCK_1Byte</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, w5500.o(.text.Write_W5500_SOCK_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Write_W5500_SOCK_1Byte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Interrupt_Process
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_UDP
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Listen
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Connect
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_Gateway
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init
</UL>

<P><STRONG><a name="[9d]"></a>Write_W5500_SOCK_2Byte</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, w5500.o(.text.Write_W5500_SOCK_2Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Write_W5500_SOCK_2Byte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_SOCK_Data_Buffer
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SOCK_Data_Buffer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Connect
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Init
</UL>

<P><STRONG><a name="[53]"></a>Write_W5500_SOCK_4Byte</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, w5500.o(.text.Write_W5500_SOCK_4Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Write_W5500_SOCK_4Byte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Connect
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Detect_Gateway
</UL>

<P><STRONG><a name="[ac]"></a>Write_W5500_nByte</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, w5500.o(.text.Write_W5500_nByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Write_W5500_nByte &rArr; SPI_Send_Short &rArr; HAL_SPI_Transmit &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Short
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Init
</UL>

<P><STRONG><a name="[44]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = main &rArr; vApp_ModbusTCP_Process &rArr; Socket_Data_Process &rArr; ModbusTCP_04_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_ModbusTCP_Process
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_DevPara_ResetCheck
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_Net_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_Modbus_DataInit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[97]"></a>ucBoard_OUTPUT_Ctrl</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, board.o(.text.ucBoard_OUTPUT_Ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ucBoard_OUTPUT_Ctrl &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Coil_Set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Hold_RegData_Process
</UL>

<P><STRONG><a name="[b6]"></a>ucDev_Para_Reset</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, board.o(.text.ucDev_Para_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ucDev_Para_Reset &rArr; EEPROM_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_DevPara_ResetCheck
</UL>

<P><STRONG><a name="[b7]"></a>ucLoad_DevPara</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, board.o(.text.ucLoad_DevPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = ucLoad_DevPara &rArr; EEPROM_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Read
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_Modbus_DataInit
</UL>

<P><STRONG><a name="[94]"></a>ucWrite_BootParagram</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, board.o(.text.ucWrite_BootParagram))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ucWrite_BootParagram &rArr; EEPROM_Write &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_10_Process
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModbusTCP_06_Process
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Modbus_Hold_RegData_Process
</UL>

<P><STRONG><a name="[b4]"></a>vApp_DevPara_ResetCheck</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, app_modbus.o(.text.vApp_DevPara_ResetCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = vApp_DevPara_ResetCheck &rArr; W5500_Initialization &rArr; Detect_Gateway &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Initialization
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Hardware_Reset
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Net_Parameters
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucDev_Para_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>vApp_ModbusTCP_Process</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, app_net.o(.text.vApp_ModbusTCP_Process))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = vApp_ModbusTCP_Process &rArr; Socket_Data_Process &rArr; ModbusTCP_04_Process &rArr; ModbusTCP_ACK_Error &rArr; Write_SOCK_Data_Buffer &rArr; Read_W5500_SOCK_2Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Interrupt_Process
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Socket_Set
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Link_Detect
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Socket_Data_Process
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Initialization
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>vApp_Modbus_DataInit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app_modbus.o(.text.vApp_Modbus_DataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = vApp_Modbus_DataInit &rArr; ucLoad_DevPara &rArr; EEPROM_Read &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucLoad_DevPara
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vBoard_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b3]"></a>vApp_Net_Init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, app_net.o(.text.vApp_Net_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = vApp_Net_Init &rArr; W5500_Initialization &rArr; Detect_Gateway &rArr; Read_W5500_SOCK_1Byte &rArr; SPI_Read_Byte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Initialization
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W5500_Hardware_Reset
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_Net_Parameters
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bb]"></a>vBoard_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, board.o(.text.vBoard_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vBoard_Init &rArr; HAL_GPIO_WritePin
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApp_Modbus_DataInit
</UL>

<P><STRONG><a name="[7d]"></a>vNet_LinkLose_Count</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, app_net.o(.text.vNet_LinkLose_Count))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Tick_SysCall
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cb]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[cc]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b9]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucLoad_DevPara
</UL>

<P><STRONG><a name="[b8]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucLoad_DevPara
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5e]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, stm32f3xx_hal_i2c.o(.text.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>

<P><STRONG><a name="[60]"></a>I2C_TransferConfig</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f3xx_hal_i2c.o(.text.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>

<P><STRONG><a name="[63]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, stm32f3xx_hal_i2c.o(.text.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>

<P><STRONG><a name="[61]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, stm32f3xx_hal_i2c.o(.text.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[7e]"></a>I2C_IsErrorOccurred</STRONG> (Thumb, 510 bytes, Stack size 48 bytes, stm32f3xx_hal_i2c.o(.text.I2C_IsErrorOccurred))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[7f]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, stm32f3xx_hal_i2c.o(.text.I2C_Flush_TXDR))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsErrorOccurred
</UL>

<P><STRONG><a name="[62]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, stm32f3xx_hal_i2c.o(.text.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[5f]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, stm32f3xx_hal_i2c.o(.text.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnFlagUntilTimeout &rArr; I2C_IsErrorOccurred &rArr; I2C_Flush_TXDR
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[6e]"></a>__NVIC_SetPriorityGrouping</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f3xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>

<P><STRONG><a name="[6b]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[6c]"></a>NVIC_EncodePriority</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, stm32f3xx_hal_cortex.o(.text.NVIC_EncodePriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_EncodePriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[6d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f3xx_hal_cortex.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[70]"></a>__NVIC_SystemReset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f3xx_hal_cortex.o(.text.__NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
</UL>

<P><STRONG><a name="[7a]"></a>SysTick_Config</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f3xx_hal_cortex.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[78]"></a>SPI_EndRxTxTransaction</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, stm32f3xx_hal_spi.o(.text.SPI_EndRxTxTransaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPI_EndRxTxTransaction &rArr; SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFlagStateUntilTimeout
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>

<P><STRONG><a name="[9f]"></a>SPI_WaitFifoStateUntilTimeout</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, stm32f3xx_hal_spi.o(.text.SPI_WaitFifoStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_WaitFifoStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>

<P><STRONG><a name="[a0]"></a>SPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, stm32f3xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_EndRxTxTransaction
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
